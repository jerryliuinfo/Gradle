apply plugin: 'com.android.application'



android {
    compileSdkVersion(26)
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.apache.gradle"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors{
        dev{

        }

        google{

        }
    }


    applicationVariants.all{ variantType ->
        variantType.outputs.each {outputType ->
            if (outputType.outputFile != null && outputType.outputFile.name.endsWith(".apk")){
                if (true || "release".equals(variantType.buildType.name)){
                    String flavorName = variantType.flavorName
                    variantType.buildConfigField('String', 'publish_type', "\"qq\"")
                    println "----------->applicationVariants.all: ${flavorName}"
                    String apkName = "Gradle_"+variantType.versionCode +"_"+variantType.versionName +"_"+flavorName +"_"+getBuildTime()+".apk"
                    def apkFile = new File(outputType.outputFile.getParent(),apkName)
                    outputType.outputFile = apkFile;
                }
            }
        }

    }
}





def String getBuildTime(){
    def Date date = new Date();
    date.format("yyyymmdd")
    date
}

sourceSets{
    main{
        resources.srcDirs = ['src/main/res']
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}


task ex37CustomProperty{
    println "年龄: ${age}, phone: ${phone} , married: ${married}"

    sourceSets.each {
        println "${it.name} 的resourcesDir : ${it.resources.srcDirs}"
    }
}


task myJar(type: Jar){
    from 'build/libs/aop-1.0.1.jar'
    into 'libs'
}



//and-aop为resources/META-INF/gradle-plugins
//下的properties文件名称
apply plugin: 'and-aop'
buildscript {
    repositories {
        maven {//本地Maven仓库地址
            url uri('../repos')
        }
    }
    dependencies {
        //格式为-->group:module:version
        classpath 'and-aop:aop:1.0.1'


    }
}





task publishJar(type: Jar){
    println '------------------------'
    println 'publishJar'
    println '------------------------'

}

version '1.0.0'
artifacts{
    archives publishJar
}

uploadArchives{
    repositories{
        flatDir{
            name 'libs'
            dirs "$project/libs"
        }

    }
}



